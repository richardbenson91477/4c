@load "../model"
@load "../../win"
@load "../../colors"

main% @do
    %win_w 640
    %win_h 480

    :win_conf.wc new^ @or
        return 1

    :win_conf.wc\%w %win_w
    :win_conf.wc\%h %win_h
    :win_conf.wc\$title "model_1"
    :win_conf.wc\^gl true
 
    win_init^ @or
        return 2

    :win.w new^ :win_conf.wc @or
        return 3

    :win.w win_open^ @or
        return 4

    :view.v new^ @or
        return 5
 
    :view.v set^ %win_w %win_h @or
        return 6
 
    :model.m new^ @or
        return 7

    :model.m load^ :view.v _ "test1.model" @or
        return 8

    .m_pos 0.0 0.0 -4.0
    .eye_v 0.0 0.0 4.0
    .light_v 0.0 0.0 0.0 0.0
    .m_rot 0.0 0.0 0.0
 
    %frame_t (1.0 / %win_run_fps)
 
    %zr 0.0
    win_tick^ @while
        :view.v tick^ %frame_t @or
            break

        %zr (%zr + (%frame_t / 2.0))
        (%zr > %PI2) @and
            %zr (%zr - %PI2)

        :view.v render^

        :view.v mv_reset^

        .light_v[0] (:win.w\%m_xf * 4.0)
        .light_v[1] (:win.w\%m_yf * 4.0)
        :view.v light_setpos^ .light_v
 
        :view.v mv_negtrans^ .eye_v
        :view.v mv_push^
            :view.v mv_trans^ .m_pos

            .m_rot[0] (:win.w\%m_yf * 1.8)
            .m_rot[1] (:win.w\%m_xf * 1.8)
            .m_rot[2] 0.0
            :view.v mv_rot^ .m_rot

            .m_rot[0] 0.0
            .m_rot[1] 0.0
            .m_rot[2] %zr
            :view.v mv_rot^ .m_rot

            :model.m render^ :view.v
        :view.v mv_pop^

        :win.w render^
    @wend
 
    :model.m del^ :view.v
    :view.v del^

    win_deinit^

    :win_conf.wc del^

    return 0
@done

